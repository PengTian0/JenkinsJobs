timestamps{
    stage("Create Manifest"){
	node(){

            checkout changelog: false, poll: false, 
                scm: [$class: 'GitSCM', branches: [[name: '*/master']], 
                doGenerateSubmoduleConfigurations: false, 
                extensions: [[$class: 'RelativeTargetDirectory', 
                relativeTargetDir: 'on-build-config']], 
                submoduleCfg: [], 
                userRemoteConfigs: [[url: 'https://github.com/RackHD/on-build-config.git']]]
                
            withCredentials([[$class: 'UsernamePasswordMultiBinding', 
                credentialsId: 'a94afe79-82f5-495a-877c-183567c51e0b', 
                passwordVariable: 'BINTRAY_API_KEY', 
                usernameVariable: 'BINTRAY_USERNAME']]) {
            
                sh './generate_manifest.sh'

		// inject properties file as environment variables
                    if(fileExists ('downstream_file')) {

                        def props = readProperties file: 'downstream_file'

                        if(props['MANIFEST_FILE_URL']) {
                            env.MANIFEST_FILE_URL = "${props.MANIFEST_FILE_URL}"
                        }
                    }
                   
                }	
	    }
        }
    stage("Build & Test"){
	parallel 'Continus Functional Test':{
               build job: 'Continuous-Test/Continuous-Functional', parameters: [string(name: 'MANIFEST_FILE_URL', value: env.MANIFEST_FILE_URL), booleanParam(name: 'IS_OFFICIAL_RELEASE', value: env.IS_OFFICIAL_RELEASE=="true")];

        }, 'debian build':{
            withEnv(["BINTRAY_SUBJECT=rackhd-mirror", "CI_BINTRAY_REPO=debian", "BINTRAY_COMPONENT=main", "BINTRAY_DISTRIBUTION=trusty", "BINTRAY_ARCHITECTURE=amd64"]) {
            node('bri-test-2'){
                deleteDir();

                checkout changelog: false, poll: false, 
                scm: [$class: 'GitSCM', branches: [[name: '*/master']], 
                doGenerateSubmoduleConfigurations: false, 
                extensions: [[$class: 'RelativeTargetDirectory', 
                relativeTargetDir: 'on-build-config']], 
                submoduleCfg: [], 
                userRemoteConfigs: [[url: 'https://github.com/RackHD/on-build-config.git']]]

            
                withCredentials(
				[usernameColonPassword(credentialsId: 'ff7ab8d2-e678-41ef-a46b-dd0e780030e1', variable: 'SUDO_CREDS'), 
				usernameColonPassword(credentialsId: 'a94afe79-82f5-495a-877c-183567c51e0b', variable: 'BINTRAY_CREDS')]) {

                   sh './build_debian.sh'
                }

                // inject properties file as environment variables
                if(fileExists ('downstream_file')) {

                    def props = readProperties file: 'downstream_file'

                    if(props['RACKHD_VERSION']) {
                        env.RACKHD_VERSION = "${props.RACKHD_VERSION}"
                    }
					
					if(props['RACKHD_COMMIT']) {
                        env.RACKHD_COMMIT = "${props.RACKHD_COMMIT}"
                    }
                }

                archiveArtifacts 'b/**/*.deb'
            }

           }
        }, 'docker build':{
            build job: 'BuildRelease/Build/docker-build', parameters: [string(name: 'MANIFEST_FILE_URL', value: env.MANIFEST_FILE_URL)];
        }
    }
    stage("Release"){
	parallel 'Release':{
            node('bri-test-2'){
                checkout changelog: false, poll: false,
                scm: [$class: 'GitSCM', branches: [[name: '*/master']],
                doGenerateSubmoduleConfigurations: false,
                extensions: [[$class: 'RelativeTargetDirectory',
                relativeTargetDir: 'on-build-config']],
                submoduleCfg: [],
                userRemoteConfigs: [[url: 'https://github.com/RackHD/on-build-config.git']]]

                withCredentials(
                                [usernameColonPassword(credentialsId: 'a94afe79-82f5-495a-877c-183567c51e0b', variable: 'BINTRAY_CREDS')]) {
                 sh '''#!/bin/bash
set -ex
echo "upload debian to bintray"


if [ $IS_OFFICIAL_RELEASE == true ];
then
BINTRAY_COMPONENT=release
fi
echo $BINTRAY_COMPONENT

./on-build-config/build-release-tools//HWIMO-BUILD ./on-build-config/build-release-tools/application/release_debian_packages.py \
--build-directory  b \
--bintray-credential BINTRAY_CREDS \
--bintray-subject $BINTRAY_SUBJECT \
--bintray-repo $BINTRAY_REPO \
--bintray-component $BINTRAY_COMPONENT \
--bintray-distribution $BINTRAY_DISTRIBUTION \
--bintray-architecture $BINTRAY_ARCHITECTURE

                 '''
            }
          }
        }, 'Relase Docker':{
	   echo "release docker";	
        }
      }
    }
